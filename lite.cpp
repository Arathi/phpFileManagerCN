#include <iostream>#include <fstream>#include <string>#include <cctype>#include <vector>using namespace std;string& lTrim(string &ss){    string::iterator p;    for (p=ss.begin(); p!=ss.end(); p++)        if (!isspace(*p)) break;    ss.erase(ss.begin(),p);    return ss;}void initLangList(vector<string> &langs){    langs.clear();    langs.push_back("en");    langs.push_back("cn");}int main(int argc, char **args){    //TODO 添加参数可配置    ifstream fin("index.php");    ofstream fout("phpfm.php");    vector<string> langs;    initLangList(langs);        if ( !fin.good() ) return 1;    string line, trimedLine;    vector<string>::iterator iter;    bool function_et=false, select_newlang=false;    while ( getline(fin, line) )    {        trimedLine=line;        lTrim(trimedLine);        //边界判定        if (trimedLine == "function et($tag){")        {            function_et=true;        }        if (trimedLine == "<select name=newlang>")        {            select_newlang=true;        }        if (function_et && trimedLine.substr(0,6) == "$lang_")        {            function_et=false;        }        if (select_newlang && trimedLine.substr(0,9) == "</select>")        {            select_newlang=false;        }        //处理        // TODO 支持更多语言的保留        bool skipThisLine=false;        string langType="";        if (function_et)        {            if (trimedLine.length()>=1)            {                //检查格式：${语言类型}[                if (trimedLine[0]=='$')                {                    //查找'['的位置                    string::size_type index=trimedLine.find( '[', 0 );                    if (index!=string::npos)                    {                        langType=trimedLine.substr( 1, index-1 );                    }                }            }        }        if (select_newlang)        {            if (trimedLine.length()>=14)            {                if (trimedLine.substr(0, 14)=="<option value=")                {                    //查找'>'的位置                    string::size_type index=trimedLine.find( '>', 14 );                    if (index!=string::npos)                    {                        cout<<"结束位置索引："<<index<<endl;                        langType=trimedLine.substr( 14, index-14 );                        cout<<"语言类型："<<langType<<endl;                    }                }            }        }        if (langType!="")        {            //clog<<"语言类型: "<<langType<<endl;            skipThisLine=true;            for (iter=langs.begin(); iter!=langs.end(); iter++)            {                if ( *iter == langType )                {                    skipThisLine=false;                }            }        }        if (!skipThisLine)        {            fout<<line<<endl;        }    }    return 0;}